#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <100>;
            retro-tap;
            hold-while-undecided;
        };

        voldpauseplay: voldpauseplay {
            compatible = "zmk,behavior-tap-dance";
            label = "VOLDPAUSEPLAY";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_DOWN>, <&kp C_PLAY_PAUSE>;
        };

        backslashPipe: backslashPipe {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSLASHPIPE";
            bindings = <&kp NON_US_BACKSLASH>, <&kp PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hmf: hmf {
            compatible = "zmk,behavior-hold-tap";
            label = "HMF";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
            quick-tap-ms = <100>;
            retro-tap;
            hold-while-undecided;
        };

        hms: hms {
            compatible = "zmk,behavior-hold-tap";
            label = "HMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            quick-tap-ms = <100>;
            retro-tap;
            hold-while-undecided;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1             &kp N2               &kp N3          &kp N4              &kp N5  &tog 1                                                                       &mo 3            &kp N6  &kp N7                &kp N8            &kp N9                &kp N0                 &kp MINUS
&kp TAB    &kp Q              &kp W                &kp E           &kp R               &kp T   &none                                                                        &kp C_VOLUME_UP  &kp Y   &kp U                 &kp I             &kp O                 &kp P                  &kp BSLH
&kp ESC    &hms LEFT_SHIFT A  &hms LEFT_CONTROL S  &ht LEFT_ALT D  &ht LEFT_COMMAND F  &kp G   &none          &kp LEFT_COMMAND  &kp LALT      &kp RIGHT_CONTROL  &mo 4      &voldpauseplay   &kp H   &hmf RIGHT_COMMAND J  &hmf RIGHT_ALT K  &hmf RIGHT_CONTROL L  &hmf RIGHT_SHIFT SEMI  &kp SQT
&kp LSHFT  &kp Z              &kp X                &kp C           &kp V               &kp B                                    &kp HOME      &mo 4                                          &kp N   &kp M                 &kp COMMA         &kp DOT               &kp FSLH               &kp RSHFT
&mo 2      &kp GRAVE          &kp EQUAL            &kp LEFT        &kp RIGHT                   &kp BACKSPACE  &kp TAB           &kp END       &mo 4              &kp ENTER  &kp SPACE                &kp UP                &kp DOWN          &kp LBKT              &kp RBKT               &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        spaces {
            bindings = <
&trans  &trans            &trans            &trans            &trans                &trans          &trans                                      &trans  &trans           &trans                 &trans             &trans            &trans            &trans
&trans  &trans            &trans            &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &trans                                      &trans  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &backslashPipe    &trans            &trans
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)      &trans          &trans  &trans  &trans      &trans  &trans  &trans  &trans           &kp LC(NUMBER_5)       &kp LC(NUMBER_6)   &kp LC(NUMBER_7)  &kp LC(NUMBER_8)  &trans
&trans  &trans            &trans            &trans            &trans                &trans                          &trans      &trans                  &trans           &trans                 &trans             &trans            &trans            &trans
&trans  &trans            &trans            &trans            &trans                                &trans  &trans  &trans      &trans  &trans  &trans                   &trans                 &trans             &trans            &trans            &trans
            >;
        };
    };
};
